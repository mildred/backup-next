#!/bin/bash
set -e
. "$BACKUP_DRIVER_DIR/duplicity.conf"
set +e

: ${AUTO_PRUNE:=false}
: ${AUTO_PRUNE_DELAY:=1W}
: ${FULL_BACKUP_PERIOD:=$AUTO_PRUNE_DELAY}

get_destdir(){
    destdir="${1#/}"; destdir="${destdir%/}"; destdir="${destdir//\//-}"
}

print_args(){
    while [[ $# -gt 0 ]]; do
        if [[ "$1" == "${1//[ *\$\"]/}" ]]; then
            printf " %s" "$1"
        else
            printf " '%s'" "$1"
        fi
        shift
    done
    echo
}

run() {
    printf +
    print_args "$@"
    if ! ${BACKUP_DRY_RUN:-false}; then
        "$@"
    fi
}

has_force(){
    while [[ $# -gt 0 ]]; do
        if [[ "a$1" == "a--force" ]]; then
            return 0
        fi
        shift
    done
    return 1
}

act="$1"
shift
case "$act" in
    init)
        subact="$1"
        shift
    ;;
    backup)
        dir="$1"
        get_destdir "$1"
        dirflags=()
        if ! [[ -d $dir ]]; then
            dirflags=(--include "${dir%/*}/${dir##*/}" --exclude '**')
            dir="${dir%/*}/"
        fi
        shift
        set -e
        run duplicity incremental --full-if-older-than $FULL_BACKUP_PERIOD "${FLAGS[@]}" "${FLAGS_BACKUP[@]}" "$@" "${dirflags[@]}" "$dir" "$DESTINATION/$destdir"
        set +e
        if $AUTO_PRUNE; then
          run duplicity remove-older-than "$AUTO_PRUNE_DELAY" --force "${FLAGS[@]}" "$DESTINATION/$destdir"
        fi
    ;;
    list)
        dir="$1"
        get_destdir "$1"
        shift
        set -e
        run duplicity collection-status "${FLAGS[@]}" "$@" "$DESTINATION/$destdir"
    ;;
    restore)
        dest="$1"
        dir="${dest%/*}/"
        get_destdir "$1"
        shift
        set -e
        if [[ "$dir" == "$dest" ]]; then
            run duplicity restore "${FLAGS[@]}" "$@" "$DESTINATION/$destdir" "$dest"
        elif [[ -e "$dest" ]] && ! has_force "$@"; then
            echo "$dest: File already exists, use --force to overwrite"
            false
        else
            r=$RANDOM
            run duplicity restore "${FLAGS[@]}" "$@" "$DESTINATION/$destdir" "$dest.restore.$r"
            run mv -f "$dest.restore.$r/$(basename "$dest")" "$dest"
            run rmdir "$dest.restore.$r"
        fi
    ;;
    commit)
        subact="$1"
        shift
    ;;
    *)
        echo "Unimplemented $act"
    ;;
esac